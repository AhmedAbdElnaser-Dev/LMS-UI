@startuml LMS Database Diagram

!define table(x) class x << (T,#FFAAAA) >>
!define primary_key(x) <u>x</u>
!define foreign_key(x) #x#

skinparam class {
    BackgroundColor White
    ArrowColor #2688d4
    BorderColor #2688d4
}

' Tables
table(Users) {
    primary_key(id): UUID
    name: VARCHAR(255)
    email: VARCHAR(255)
    password: VARCHAR(255)
    age: INTEGER
    gender: VARCHAR(50)
    timezone: VARCHAR(100)
    telegram_number: VARCHAR(50)
    phone_number: VARCHAR(50)
    available_time: TIMESTAMP
    role: ENUM ('student', 'teacher', 'manager', 'supervisor', 'admin')
}

table(Courses) {
    primary_key(id): UUID
    name: VARCHAR(255)
    description: TEXT
    about: TEXT
    demo_url: VARCHAR(255)
    prerequisites: TEXT
    foreign_key(added_by): UUID
}

table(Books) {
    primary_key(id): UUID
    name: VARCHAR(255)
    description: TEXT
    foreign_key(course_id): UUID
    url_pdf: VARCHAR(255)
    url_pic: VARCHAR(255)
}

table(Levels) {
    primary_key(id): UUID
    name: VARCHAR(255)
    foreign_key(course_id): UUID
    foreign_key(book_id): UUID
}

table(Materials) {
    primary_key(id): UUID
    name: VARCHAR(255)
    description: TEXT
    foreign_key(course_id): UUID
    url: VARCHAR(255)
}

table(Groups) {
    primary_key(id): UUID
    name: VARCHAR(255)
    foreign_key(course_id): UUID
    time: TIMESTAMP
    private: BOOLEAN
    foreign_key(teacher_id): UUID
}

table(StudentGroups) {
    primary_key(id): UUID
    foreign_key(student_id): UUID
    foreign_key(group_id): UUID
}

table(CourseRequests) {
    primary_key(id): UUID
    foreign_key(user_id): UUID
    foreign_key(course_id): UUID
    status: VARCHAR(50)
    foreign_key(supervisor_id): UUID
    foreign_key(department_id): UUID
}

table(Sessions) {
    primary_key(id): UUID
    name: VARCHAR(255)
    time: TIMESTAMP
    type: ENUM('group', 'private')
    foreign_key(teacher_id): UUID
    foreign_key(group_id): UUID
}

table(HomeworkNotifications) {
    primary_key(id): UUID
    foreign_key(teacher_id): UUID
    foreign_key(student_id): UUID
    foreign_key(course_id): UUID
    message: TEXT
}

table(Departments) {
    primary_key(id): UUID
    name: VARCHAR(255)
}

' Relationships
Users "1" -- "0..*" CourseRequests : submits
Users "1" -- "0..*" StudentGroups : joins
Users "1" -- "0..*" Sessions : teaches
Users "1" -- "0..*" HomeworkNotifications : receives
Users "1" -- "0..*" Courses : manages

Courses "1" -- "0..*" Books : contains
Courses "1" -- "0..*" Levels : has
Courses "1" -- "0..*" Materials : includes
Courses "1" -- "0..*" CourseRequests : requested_for
Courses "1" -- "0..*" Groups : organized_for

Groups "1" -- "0..*" StudentGroups : includes
Groups "1" -- "0..*" Sessions : schedules
Groups "1" -- "1" Users : led_by

Books "1" -- "0..*" Levels : assigned_to

Departments "1" -- "0..*" CourseRequests : handles

@enduml
